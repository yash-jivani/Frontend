/* 

* ################ Background ################# 

background: color URL repeat position;
background-image: linear-gradient(direction, color-stop1, color-stop2, ...);


* ################ Shadows ################# 

#### text-shadow ####
text-shadow : horizontal vertical blur color;

#### box-shadow ####
box-shadow: horizontal vertical blur spread color;


* ################ Animations ################# 

animation: name duration timing-function delay iteration-count direction fill-mode play-state;


* ################ Other properties with usage ################# 

display : none;                 -> the tag will not appear on the page at all (although you can still interact with it through the dom).
visibilty: hidden;              -> the tag is not visible, but space is allocated for it on the page.
display : inline;               -> vertical no chnages(margin)
border : 10px solid gray;        -> Border is created inside the element,
outline : 10px solid lightgray;       -> outline is created outside the element.
outline-offset : 2px;           -> line drawn around elements, outside the border edge


* ################ Link ################# 

Order -> :link, :visited, :hover, :active


* ################ Positions ################# 

static      -> normal flow (default)    
relative    -> jis div ko relative position di hai vha se ((left,right,top,bottom))
absolute    -> positioned relative to the nearest positioned ancestor (best practice : set parent div position relative)  ((left,right,top,bottom))
sticky      -> positioned based on the user's scroll position. ((left,right,top,bottom))
fixed       -> positioned relative to the viewport ((left,right,top,bottom))

DEMO -> https://css-tricks.com/almanac/properties/p/position/


* ################ Pseudo classes & pseudo elements ################# 

pseudo elements ::
    ::before, ::after, ::first-letter, ::first-line

pseudo classes : 
    :hover, :link, :visited, :enabled, :first-child, :nth-child(n), :nth-last-child(n), :nth-of-type(n)...


* ################ Specificity ################# 

  !important    inline    id    class   tags/pseudo-Ele
       0           0       0      0          0

examples : 

0, 0, 0, 0, 1
h1{
    // preperties
}

0, 0, 0, 1, 0
.header{
    // preperties
}

0, 0, 1, 0, 0
#head{
    // preperties
}

0, 0, 1, 1, 2
#head .cls h1 p{
    // preperties
}

1, 0, 0, 1, 0
.header-2{
    property !important;
}


* ################ Selectors ################# 

Child selector (>) ,
Adjacent sibling selector (+) ,
General sibling selector (~) 

1. child ( > )  : selects all elements that are the children of a specified element.
example - 
https://www.w3schools.com/css/tryit.asp?filename=trycss_sel_element_gt 
https://www.javatpoint.com/css-combinators

2. adjacent sibling selector (+) : select an element that is directly after another specific element. 
example - 
https://www.w3schools.com/css/tryit.asp?filename=trycss_sel_element_pluss
https://www.javatpoint.com/css-combinators

3. general sibling selector (~) : selects all elements that are next siblings of a specified element.
example - 
https://www.w3schools.com/css/tryit.asp?filename=trycss_sel_element_tilde
https://www.javatpoint.com/css-combinators

Other :
p.classname{...}
     ==> You are looking for a <p> with class classname

.classname p{...}
    ==> You are looking for a p that is a descendant of the classes classname.

*/